'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("ReservasiDataset"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class ReservasiDataset
    Inherits Global.System.Data.DataSet
    
    Private tableReservasiD As ReservasiDDataTable
    
    Private tableReservasiH As ReservasiHDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("ReservasiD")) Is Nothing) Then
                MyBase.Tables.Add(New ReservasiDDataTable(ds.Tables("ReservasiD")))
            End If
            If (Not (ds.Tables("ReservasiH")) Is Nothing) Then
                MyBase.Tables.Add(New ReservasiHDataTable(ds.Tables("ReservasiH")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ReservasiD() As ReservasiDDataTable
        Get
            Return Me.tableReservasiD
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ReservasiH() As ReservasiHDataTable
        Get
            Return Me.tableReservasiH
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As ReservasiDataset = CType(MyBase.Clone,ReservasiDataset)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("ReservasiD")) Is Nothing) Then
                MyBase.Tables.Add(New ReservasiDDataTable(ds.Tables("ReservasiD")))
            End If
            If (Not (ds.Tables("ReservasiH")) Is Nothing) Then
                MyBase.Tables.Add(New ReservasiHDataTable(ds.Tables("ReservasiH")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableReservasiD = CType(MyBase.Tables("ReservasiD"),ReservasiDDataTable)
        If (initTable = true) Then
            If (Not (Me.tableReservasiD) Is Nothing) Then
                Me.tableReservasiD.InitVars
            End If
        End If
        Me.tableReservasiH = CType(MyBase.Tables("ReservasiH"),ReservasiHDataTable)
        If (initTable = true) Then
            If (Not (Me.tableReservasiH) Is Nothing) Then
                Me.tableReservasiH.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "ReservasiDataset"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/ReservasiDataset.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableReservasiD = New ReservasiDDataTable()
        MyBase.Tables.Add(Me.tableReservasiD)
        Me.tableReservasiH = New ReservasiHDataTable()
        MyBase.Tables.Add(Me.tableReservasiH)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeReservasiD() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeReservasiH() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As ReservasiDataset = New ReservasiDataset()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub ReservasiDRowChangeEventHandler(ByVal sender As Object, ByVal e As ReservasiDRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub ReservasiHRowChangeEventHandler(ByVal sender As Object, ByVal e As ReservasiHRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ReservasiDDataTable
        Inherits Global.System.Data.TypedTableBase(Of ReservasiDRow)
        
        Private columnIDReservasiH As Global.System.Data.DataColumn
        
        Private columnIDReservasiD As Global.System.Data.DataColumn
        
        Private columnIDDaftarMeja As Global.System.Data.DataColumn
        
        Private columnJamMulai As Global.System.Data.DataColumn
        
        Private columnJamSelesai As Global.System.Data.DataColumn
        
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub New()
      MyBase.New()
      Me.TableName = "ReservasiD"
      Me.BeginInit()
      Me.InitClass()
      Me.EndInit()
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Friend Sub New(ByVal table As Global.System.Data.DataTable)
      MyBase.New()
      Me.TableName = table.TableName
      If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
        Me.CaseSensitive = table.CaseSensitive
      End If
      If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
        Me.Locale = table.Locale
      End If
      If (table.Namespace <> table.DataSet.Namespace) Then
        Me.Namespace = table.Namespace
      End If
      Me.Prefix = table.Prefix
      Me.MinimumCapacity = table.MinimumCapacity
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
      MyBase.New(info, context)
      Me.InitVars()
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public ReadOnly Property IDReservasiHColumn() As Global.System.Data.DataColumn
      Get
        Return Me.columnIDReservasiH
      End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public ReadOnly Property IDReservasiDColumn() As Global.System.Data.DataColumn
      Get
        Return Me.columnIDReservasiD
      End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public ReadOnly Property IDDaftarMejaColumn() As Global.System.Data.DataColumn
      Get
        Return Me.columnIDDaftarMeja
      End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public ReadOnly Property JamMulaiColumn() As Global.System.Data.DataColumn
      Get
        Return Me.columnJamMulai
      End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public ReadOnly Property JamSelesaiColumn() As Global.System.Data.DataColumn
      Get
        Return Me.columnJamSelesai
      End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False)> _
    Public ReadOnly Property Count() As Integer
      Get
        Return Me.Rows.Count
      End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Default Public ReadOnly Property Item(ByVal index As Integer) As ReservasiDRow
      Get
        Return CType(Me.Rows(index), ReservasiDRow)
      End Get
    End Property

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Event ReservasiDRowChanging As ReservasiDRowChangeEventHandler

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Event ReservasiDRowChanged As ReservasiDRowChangeEventHandler

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Event ReservasiDRowDeleting As ReservasiDRowChangeEventHandler

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Event ReservasiDRowDeleted As ReservasiDRowChangeEventHandler

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Overloads Sub AddReservasiDRow(ByVal row As ReservasiDRow)
      Me.Rows.Add(row)
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Overloads Function AddReservasiDRow(ByVal IDReservasiH As Long, ByVal IDReservasiD As Long, ByVal IDDaftarMeja As Integer, ByVal JamMulai As Date, ByVal JamSelesai As Date) As ReservasiDRow
      Dim rowReservasiDRow As ReservasiDRow = CType(Me.NewRow, ReservasiDRow)
      Dim columnValuesArray() As Object = New Object() {IDReservasiH, IDReservasiD, IDDaftarMeja, JamMulai, JamSelesai}
      rowReservasiDRow.ItemArray = columnValuesArray
      Me.Rows.Add(rowReservasiDRow)
      Return rowReservasiDRow
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function FindByIDReservasiD(ByVal IDReservasiD As Long) As ReservasiDRow
      Return CType(Me.Rows.Find(New Object() {IDReservasiD}), ReservasiDRow)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Overrides Function Clone() As Global.System.Data.DataTable
      Dim cln As ReservasiDDataTable = CType(MyBase.Clone, ReservasiDDataTable)
      cln.InitVars()
      Return cln
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
      Return New ReservasiDDataTable()
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Friend Sub InitVars()
      Me.columnIDReservasiH = MyBase.Columns("IDReservasiH")
      Me.columnIDReservasiD = MyBase.Columns("IDReservasiD")
      Me.columnIDDaftarMeja = MyBase.Columns("IDDaftarMeja")
      Me.columnJamMulai = MyBase.Columns("JamMulai")
      Me.columnJamSelesai = MyBase.Columns("JamSelesai")
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Sub InitClass()
      Me.columnIDReservasiH = New Global.System.Data.DataColumn("IDReservasiH", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
      MyBase.Columns.Add(Me.columnIDReservasiH)
      Me.columnIDReservasiD = New Global.System.Data.DataColumn("IDReservasiD", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
      MyBase.Columns.Add(Me.columnIDReservasiD)
      Me.columnIDDaftarMeja = New Global.System.Data.DataColumn("IDDaftarMeja", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
      MyBase.Columns.Add(Me.columnIDDaftarMeja)
      Me.columnJamMulai = New Global.System.Data.DataColumn("JamMulai", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
      MyBase.Columns.Add(Me.columnJamMulai)
      Me.columnJamSelesai = New Global.System.Data.DataColumn("JamSelesai", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
      MyBase.Columns.Add(Me.columnJamSelesai)
      Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnIDReservasiD}, True))
      Me.columnIDReservasiH.AllowDBNull = False
      Me.columnIDReservasiD.AllowDBNull = False
      Me.columnIDReservasiD.Unique = True
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function NewReservasiDRow() As ReservasiDRow
      Return CType(Me.NewRow, ReservasiDRow)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
      Return New ReservasiDRow(builder)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Function GetRowType() As Global.System.Type
      Return GetType(ReservasiDRow)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
      MyBase.OnRowChanged(e)
      If (Not (Me.ReservasiDRowChangedEvent) Is Nothing) Then
        RaiseEvent ReservasiDRowChanged(Me, New ReservasiDRowChangeEvent(CType(e.Row, ReservasiDRow), e.Action))
      End If
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
      MyBase.OnRowChanging(e)
      If (Not (Me.ReservasiDRowChangingEvent) Is Nothing) Then
        RaiseEvent ReservasiDRowChanging(Me, New ReservasiDRowChangeEvent(CType(e.Row, ReservasiDRow), e.Action))
      End If
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
      MyBase.OnRowDeleted(e)
      If (Not (Me.ReservasiDRowDeletedEvent) Is Nothing) Then
        RaiseEvent ReservasiDRowDeleted(Me, New ReservasiDRowChangeEvent(CType(e.Row, ReservasiDRow), e.Action))
      End If
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
      MyBase.OnRowDeleting(e)
      If (Not (Me.ReservasiDRowDeletingEvent) Is Nothing) Then
        RaiseEvent ReservasiDRowDeleting(Me, New ReservasiDRowChangeEvent(CType(e.Row, ReservasiDRow), e.Action))
      End If
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub RemoveReservasiDRow(ByVal row As ReservasiDRow)
      Me.Rows.Remove(row)
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
      Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
      Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
      Dim ds As ReservasiDataset = New ReservasiDataset()
      Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
      any1.Namespace = "http://www.w3.org/2001/XMLSchema"
      any1.MinOccurs = New Decimal(0)
      any1.MaxOccurs = Decimal.MaxValue
      any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
      sequence.Items.Add(any1)
      Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
      any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
      any2.MinOccurs = New Decimal(1)
      any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
      sequence.Items.Add(any2)
      Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
      attribute1.Name = "namespace"
      attribute1.FixedValue = ds.Namespace
      type.Attributes.Add(attribute1)
      Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
      attribute2.Name = "tableTypeName"
      attribute2.FixedValue = "ReservasiDDataTable"
      type.Attributes.Add(attribute2)
      type.Particle = sequence
      Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
      If xs.Contains(dsSchema.TargetNamespace) Then
        Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Try
          Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
          dsSchema.Write(s1)
          Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
          Do While schemas.MoveNext
            schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
            s2.SetLength(0)
            schema.Write(s2)
            If (s1.Length = s2.Length) Then
              s1.Position = 0
              s2.Position = 0

              Do While ((s1.Position <> s1.Length) _
                          AndAlso (s1.ReadByte = s2.ReadByte))


              Loop
              If (s1.Position = s1.Length) Then
                Return type
              End If
            End If

          Loop
        Finally
          If (Not (s1) Is Nothing) Then
            s1.Close()
          End If
          If (Not (s2) Is Nothing) Then
            s2.Close()
          End If
        End Try
      End If
      xs.Add(dsSchema)
      Return type
    End Function
  End Class

  '''<summary>
  '''Represents the strongly named DataTable class.
  '''</summary>
  <Global.System.Serializable(), _
   Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
  Partial Public Class ReservasiHDataTable
    Inherits Global.System.Data.TypedTableBase(Of ReservasiHRow)

    Private columnIDReservasiH As Global.System.Data.DataColumn

    Private columnIDAnggota As Global.System.Data.DataColumn

    Private columnNama As Global.System.Data.DataColumn

    Private columnTanggalReservasi As Global.System.Data.DataColumn

    Private columnUntukTanggal As Global.System.Data.DataColumn

    Private columnStatusAktif As Global.System.Data.DataColumn

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub New()
      MyBase.New()
      Me.TableName = "ReservasiH"
      Me.BeginInit()
      Me.InitClass()
      Me.EndInit()
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Friend Sub New(ByVal table As Global.System.Data.DataTable)
      MyBase.New()
      Me.TableName = table.TableName
      If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
        Me.CaseSensitive = table.CaseSensitive
      End If
      If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
        Me.Locale = table.Locale
      End If
      If (table.Namespace <> table.DataSet.Namespace) Then
        Me.Namespace = table.Namespace
      End If
      Me.Prefix = table.Prefix
      Me.MinimumCapacity = table.MinimumCapacity
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
      MyBase.New(info, context)
      Me.InitVars()
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public ReadOnly Property IDReservasiHColumn() As Global.System.Data.DataColumn
      Get
        Return Me.columnIDReservasiH
      End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public ReadOnly Property IDAnggotaColumn() As Global.System.Data.DataColumn
      Get
        Return Me.columnIDAnggota
      End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public ReadOnly Property NamaColumn() As Global.System.Data.DataColumn
      Get
        Return Me.columnNama
      End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public ReadOnly Property TanggalReservasiColumn() As Global.System.Data.DataColumn
      Get
        Return Me.columnTanggalReservasi
      End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public ReadOnly Property UntukTanggalColumn() As Global.System.Data.DataColumn
      Get
        Return Me.columnUntukTanggal
      End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public ReadOnly Property StatusAktifColumn() As Global.System.Data.DataColumn
      Get
        Return Me.columnStatusAktif
      End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False)> _
    Public ReadOnly Property Count() As Integer
      Get
        Return Me.Rows.Count
      End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Default Public ReadOnly Property Item(ByVal index As Integer) As ReservasiHRow
      Get
        Return CType(Me.Rows(index), ReservasiHRow)
      End Get
    End Property

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Event ReservasiHRowChanging As ReservasiHRowChangeEventHandler

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Event ReservasiHRowChanged As ReservasiHRowChangeEventHandler

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Event ReservasiHRowDeleting As ReservasiHRowChangeEventHandler

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Event ReservasiHRowDeleted As ReservasiHRowChangeEventHandler

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Overloads Sub AddReservasiHRow(ByVal row As ReservasiHRow)
      Me.Rows.Add(row)
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Overloads Function AddReservasiHRow(ByVal IDReservasiH As Long, ByVal IDAnggota As Long, ByVal Nama As String, ByVal TanggalReservasi As Date, ByVal UntukTanggal As Date, ByVal StatusAktif As Boolean) As ReservasiHRow
      Dim rowReservasiHRow As ReservasiHRow = CType(Me.NewRow, ReservasiHRow)
      Dim columnValuesArray() As Object = New Object() {IDReservasiH, IDAnggota, Nama, TanggalReservasi, UntukTanggal, StatusAktif}
      rowReservasiHRow.ItemArray = columnValuesArray
      Me.Rows.Add(rowReservasiHRow)
      Return rowReservasiHRow
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function FindByIDReservasiH(ByVal IDReservasiH As Long) As ReservasiHRow
      Return CType(Me.Rows.Find(New Object() {IDReservasiH}), ReservasiHRow)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Overrides Function Clone() As Global.System.Data.DataTable
      Dim cln As ReservasiHDataTable = CType(MyBase.Clone, ReservasiHDataTable)
      cln.InitVars()
      Return cln
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
      Return New ReservasiHDataTable()
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Friend Sub InitVars()
      Me.columnIDReservasiH = MyBase.Columns("IDReservasiH")
      Me.columnIDAnggota = MyBase.Columns("IDAnggota")
      Me.columnNama = MyBase.Columns("Nama")
      Me.columnTanggalReservasi = MyBase.Columns("TanggalReservasi")
      Me.columnUntukTanggal = MyBase.Columns("UntukTanggal")
      Me.columnStatusAktif = MyBase.Columns("StatusAktif")
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Sub InitClass()
      Me.columnIDReservasiH = New Global.System.Data.DataColumn("IDReservasiH", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
      MyBase.Columns.Add(Me.columnIDReservasiH)
      Me.columnIDAnggota = New Global.System.Data.DataColumn("IDAnggota", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
      MyBase.Columns.Add(Me.columnIDAnggota)
      Me.columnNama = New Global.System.Data.DataColumn("Nama", GetType(String), Nothing, Global.System.Data.MappingType.Element)
      MyBase.Columns.Add(Me.columnNama)
      Me.columnTanggalReservasi = New Global.System.Data.DataColumn("TanggalReservasi", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
      MyBase.Columns.Add(Me.columnTanggalReservasi)
      Me.columnUntukTanggal = New Global.System.Data.DataColumn("UntukTanggal", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
      MyBase.Columns.Add(Me.columnUntukTanggal)
      Me.columnStatusAktif = New Global.System.Data.DataColumn("StatusAktif", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
      MyBase.Columns.Add(Me.columnStatusAktif)
      Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnIDReservasiH}, True))
      Me.columnIDReservasiH.AllowDBNull = False
      Me.columnIDReservasiH.Unique = True
      Me.columnNama.MaxLength = 50
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function NewReservasiHRow() As ReservasiHRow
      Return CType(Me.NewRow, ReservasiHRow)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
      Return New ReservasiHRow(builder)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Function GetRowType() As Global.System.Type
      Return GetType(ReservasiHRow)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
      MyBase.OnRowChanged(e)
      If (Not (Me.ReservasiHRowChangedEvent) Is Nothing) Then
        RaiseEvent ReservasiHRowChanged(Me, New ReservasiHRowChangeEvent(CType(e.Row, ReservasiHRow), e.Action))
      End If
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
      MyBase.OnRowChanging(e)
      If (Not (Me.ReservasiHRowChangingEvent) Is Nothing) Then
        RaiseEvent ReservasiHRowChanging(Me, New ReservasiHRowChangeEvent(CType(e.Row, ReservasiHRow), e.Action))
      End If
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
      MyBase.OnRowDeleted(e)
      If (Not (Me.ReservasiHRowDeletedEvent) Is Nothing) Then
        RaiseEvent ReservasiHRowDeleted(Me, New ReservasiHRowChangeEvent(CType(e.Row, ReservasiHRow), e.Action))
      End If
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
      MyBase.OnRowDeleting(e)
      If (Not (Me.ReservasiHRowDeletingEvent) Is Nothing) Then
        RaiseEvent ReservasiHRowDeleting(Me, New ReservasiHRowChangeEvent(CType(e.Row, ReservasiHRow), e.Action))
      End If
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub RemoveReservasiHRow(ByVal row As ReservasiHRow)
      Me.Rows.Remove(row)
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
      Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
      Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
      Dim ds As ReservasiDataset = New ReservasiDataset()
      Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
      any1.Namespace = "http://www.w3.org/2001/XMLSchema"
      any1.MinOccurs = New Decimal(0)
      any1.MaxOccurs = Decimal.MaxValue
      any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
      sequence.Items.Add(any1)
      Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
      any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
      any2.MinOccurs = New Decimal(1)
      any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
      sequence.Items.Add(any2)
      Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
      attribute1.Name = "namespace"
      attribute1.FixedValue = ds.Namespace
      type.Attributes.Add(attribute1)
      Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
      attribute2.Name = "tableTypeName"
      attribute2.FixedValue = "ReservasiHDataTable"
      type.Attributes.Add(attribute2)
      type.Particle = sequence
      Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
      If xs.Contains(dsSchema.TargetNamespace) Then
        Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Try
          Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
          dsSchema.Write(s1)
          Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
          Do While schemas.MoveNext
            schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
            s2.SetLength(0)
            schema.Write(s2)
            If (s1.Length = s2.Length) Then
              s1.Position = 0
              s2.Position = 0

              Do While ((s1.Position <> s1.Length) _
                          AndAlso (s1.ReadByte = s2.ReadByte))


              Loop
              If (s1.Position = s1.Length) Then
                Return type
              End If
            End If

          Loop
        Finally
          If (Not (s1) Is Nothing) Then
            s1.Close()
          End If
          If (Not (s2) Is Nothing) Then
            s2.Close()
          End If
        End Try
      End If
      xs.Add(dsSchema)
      Return type
    End Function
  End Class

  '''<summary>
  '''Represents strongly named DataRow class.
  '''</summary>
  Partial Public Class ReservasiDRow
    Inherits Global.System.Data.DataRow

    Private tableReservasiD As ReservasiDDataTable

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
      MyBase.New(rb)
      Me.tableReservasiD = CType(Me.Table, ReservasiDDataTable)
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property IDReservasiH() As Long
      Get
        Return CType(Me(Me.tableReservasiD.IDReservasiHColumn), Long)
      End Get
      Set(value As Long)
        Me(Me.tableReservasiD.IDReservasiHColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property IDReservasiD() As Long
      Get
        Return CType(Me(Me.tableReservasiD.IDReservasiDColumn), Long)
      End Get
      Set(value As Long)
        Me(Me.tableReservasiD.IDReservasiDColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property IDDaftarMeja() As Integer
      Get
        Try
          Return CType(Me(Me.tableReservasiD.IDDaftarMejaColumn), Integer)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'IDDaftarMeja' in table 'ReservasiD' is DBNull.", e)
        End Try
      End Get
      Set(value As Integer)
        Me(Me.tableReservasiD.IDDaftarMejaColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property JamMulai() As Date
      Get
        Try
          Return CType(Me(Me.tableReservasiD.JamMulaiColumn), Date)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'JamMulai' in table 'ReservasiD' is DBNull.", e)
        End Try
      End Get
      Set(value As Date)
        Me(Me.tableReservasiD.JamMulaiColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property JamSelesai() As Date
      Get
        Try
          Return CType(Me(Me.tableReservasiD.JamSelesaiColumn), Date)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'JamSelesai' in table 'ReservasiD' is DBNull.", e)
        End Try
      End Get
      Set(value As Date)
        Me(Me.tableReservasiD.JamSelesaiColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsIDDaftarMejaNull() As Boolean
      Return Me.IsNull(Me.tableReservasiD.IDDaftarMejaColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetIDDaftarMejaNull()
      Me(Me.tableReservasiD.IDDaftarMejaColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsJamMulaiNull() As Boolean
      Return Me.IsNull(Me.tableReservasiD.JamMulaiColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetJamMulaiNull()
      Me(Me.tableReservasiD.JamMulaiColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsJamSelesaiNull() As Boolean
      Return Me.IsNull(Me.tableReservasiD.JamSelesaiColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetJamSelesaiNull()
      Me(Me.tableReservasiD.JamSelesaiColumn) = Global.System.Convert.DBNull
    End Sub
  End Class

  '''<summary>
  '''Represents strongly named DataRow class.
  '''</summary>
  Partial Public Class ReservasiHRow
    Inherits Global.System.Data.DataRow

    Private tableReservasiH As ReservasiHDataTable

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
      MyBase.New(rb)
      Me.tableReservasiH = CType(Me.Table, ReservasiHDataTable)
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property IDReservasiH() As Long
      Get
        Return CType(Me(Me.tableReservasiH.IDReservasiHColumn), Long)
      End Get
      Set(value As Long)
        Me(Me.tableReservasiH.IDReservasiHColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property IDAnggota() As Long
      Get
        Try
          Return CType(Me(Me.tableReservasiH.IDAnggotaColumn), Long)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'IDAnggota' in table 'ReservasiH' is DBNull.", e)
        End Try
      End Get
      Set(value As Long)
        Me(Me.tableReservasiH.IDAnggotaColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property Nama() As String
      Get
        Try
          Return CType(Me(Me.tableReservasiH.NamaColumn), String)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'Nama' in table 'ReservasiH' is DBNull.", e)
        End Try
      End Get
      Set(value As String)
        Me(Me.tableReservasiH.NamaColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property TanggalReservasi() As Date
      Get
        Try
          Return CType(Me(Me.tableReservasiH.TanggalReservasiColumn), Date)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'TanggalReservasi' in table 'ReservasiH' is DBNull.", e)
        End Try
      End Get
      Set(value As Date)
        Me(Me.tableReservasiH.TanggalReservasiColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property UntukTanggal() As Date
      Get
        Try
          Return CType(Me(Me.tableReservasiH.UntukTanggalColumn), Date)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'UntukTanggal' in table 'ReservasiH' is DBNull.", e)
        End Try
      End Get
      Set(value As Date)
        Me(Me.tableReservasiH.UntukTanggalColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property StatusAktif() As Boolean
      Get
        Try
          Return CType(Me(Me.tableReservasiH.StatusAktifColumn), Boolean)
        Catch e As Global.System.InvalidCastException
          Throw New Global.System.Data.StrongTypingException("The value for column 'StatusAktif' in table 'ReservasiH' is DBNull.", e)
        End Try
      End Get
      Set(value As Boolean)
        Me(Me.tableReservasiH.StatusAktifColumn) = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsIDAnggotaNull() As Boolean
      Return Me.IsNull(Me.tableReservasiH.IDAnggotaColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetIDAnggotaNull()
      Me(Me.tableReservasiH.IDAnggotaColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsNamaNull() As Boolean
      Return Me.IsNull(Me.tableReservasiH.NamaColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetNamaNull()
      Me(Me.tableReservasiH.NamaColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsTanggalReservasiNull() As Boolean
      Return Me.IsNull(Me.tableReservasiH.TanggalReservasiColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetTanggalReservasiNull()
      Me(Me.tableReservasiH.TanggalReservasiColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsUntukTanggalNull() As Boolean
      Return Me.IsNull(Me.tableReservasiH.UntukTanggalColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetUntukTanggalNull()
      Me(Me.tableReservasiH.UntukTanggalColumn) = Global.System.Convert.DBNull
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Function IsStatusAktifNull() As Boolean
      Return Me.IsNull(Me.tableReservasiH.StatusAktifColumn)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub SetStatusAktifNull()
      Me(Me.tableReservasiH.StatusAktifColumn) = Global.System.Convert.DBNull
    End Sub
  End Class

  '''<summary>
  '''Row event argument class
  '''</summary>
  <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
  Public Class ReservasiDRowChangeEvent
    Inherits Global.System.EventArgs

    Private eventRow As ReservasiDRow

    Private eventAction As Global.System.Data.DataRowAction

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub New(ByVal row As ReservasiDRow, ByVal action As Global.System.Data.DataRowAction)
      MyBase.New()
      Me.eventRow = row
      Me.eventAction = action
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public ReadOnly Property Row() As ReservasiDRow
      Get
        Return Me.eventRow
      End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public ReadOnly Property Action() As Global.System.Data.DataRowAction
      Get
        Return Me.eventAction
      End Get
    End Property
  End Class

  '''<summary>
  '''Row event argument class
  '''</summary>
  <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
  Public Class ReservasiHRowChangeEvent
    Inherits Global.System.EventArgs

    Private eventRow As ReservasiHRow

    Private eventAction As Global.System.Data.DataRowAction

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub New(ByVal row As ReservasiHRow, ByVal action As Global.System.Data.DataRowAction)
      MyBase.New()
      Me.eventRow = row
      Me.eventAction = action
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public ReadOnly Property Row() As ReservasiHRow
      Get
        Return Me.eventRow
      End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public ReadOnly Property Action() As Global.System.Data.DataRowAction
      Get
        Return Me.eventAction
      End Get
    End Property
  End Class
End Class

Namespace ReservasiDatasetTableAdapters

  '''<summary>
  '''Represents the connection and commands used to retrieve and save data.
  '''</summary>
  <Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
   Global.System.ComponentModel.ToolboxItem(True), _
   Global.System.ComponentModel.DataObjectAttribute(True), _
   Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" & _
      ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), _
   Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
  Partial Public Class ReservasiDTableAdapter
    Inherits Global.System.ComponentModel.Component

    Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter

    Private _connection As Global.System.Data.SqlClient.SqlConnection

    Private _transaction As Global.System.Data.SqlClient.SqlTransaction

    Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand

    Private _clearBeforeFill As Boolean

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub New()
      MyBase.New()
      Me.ClearBeforeFill = True
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
      Get
        If (Me._adapter Is Nothing) Then
          Me.InitAdapter()
        End If
        Return Me._adapter
      End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
      Get
        If (Me._connection Is Nothing) Then
          Me.InitConnection()
        End If
        Return Me._connection
      End Get
      Set(value As Global.System.Data.SqlClient.SqlConnection)
        Me._connection = value
        If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
          Me.Adapter.InsertCommand.Connection = value
        End If
        If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
          Me.Adapter.DeleteCommand.Connection = value
        End If
        If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
          Me.Adapter.UpdateCommand.Connection = value
        End If
        Dim i As Integer = 0
        Do While (i < Me.CommandCollection.Length)
          If (Not (Me.CommandCollection(i)) Is Nothing) Then
            CType(Me.CommandCollection(i), Global.System.Data.SqlClient.SqlCommand).Connection = value
          End If
          i = (i + 1)
        Loop
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
      Get
        Return Me._transaction
      End Get
      Set(value As Global.System.Data.SqlClient.SqlTransaction)
        Me._transaction = value
        Dim i As Integer = 0
        Do While (i < Me.CommandCollection.Length)
          Me.CommandCollection(i).Transaction = Me._transaction
          i = (i + 1)
        Loop
        If ((Not (Me.Adapter) Is Nothing) _
                    AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
          Me.Adapter.DeleteCommand.Transaction = Me._transaction
        End If
        If ((Not (Me.Adapter) Is Nothing) _
                    AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
          Me.Adapter.InsertCommand.Transaction = Me._transaction
        End If
        If ((Not (Me.Adapter) Is Nothing) _
                    AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
          Me.Adapter.UpdateCommand.Transaction = Me._transaction
        End If
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
      Get
        If (Me._commandCollection Is Nothing) Then
          Me.InitCommandCollection()
        End If
        Return Me._commandCollection
      End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property ClearBeforeFill() As Boolean
      Get
        Return Me._clearBeforeFill
      End Get
      Set(value As Boolean)
        Me._clearBeforeFill = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Sub InitAdapter()
      Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
      Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
      tableMapping.SourceTable = "Table"
      tableMapping.DataSetTable = "ReservasiD"
      tableMapping.ColumnMappings.Add("IDReservasiH", "IDReservasiH")
      tableMapping.ColumnMappings.Add("IDReservasiD", "IDReservasiD")
      tableMapping.ColumnMappings.Add("IDDaftarMeja", "IDDaftarMeja")
      tableMapping.ColumnMappings.Add("JamMulai", "JamMulai")
      tableMapping.ColumnMappings.Add("JamSelesai", "JamSelesai")
      Me._adapter.TableMappings.Add(tableMapping)
      Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
      Me._adapter.DeleteCommand.Connection = Me.Connection
      Me._adapter.DeleteCommand.CommandText = "DELETE FROM [ReservasiD] WHERE (([IDReservasiH] = @Original_IDReservasiH) AND ([I" & _
          "DReservasiD] = @Original_IDReservasiD) AND ((@IsNull_IDDaftarMeja = 1 AND [IDDaf" & _
          "tarMeja] IS NULL) OR ([IDDaftarMeja] = @Original_IDDaftarMeja)) AND ((@IsNull_Ja" & _
          "mMulai = 1 AND [JamMulai] IS NULL) OR ([JamMulai] = @Original_JamMulai)) AND ((@" & _
          "IsNull_JamSelesai = 1 AND [JamSelesai] IS NULL) OR ([JamSelesai] = @Original_Jam" & _
          "Selesai)))"
      Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
      Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IDReservasiH", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IDReservasiH", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
      Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IDReservasiD", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IDReservasiD", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
      Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IDDaftarMeja", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IDDaftarMeja", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
      Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IDDaftarMeja", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IDDaftarMeja", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
      Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_JamMulai", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "JamMulai", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
      Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_JamMulai", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "JamMulai", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
      Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_JamSelesai", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "JamSelesai", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
      Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_JamSelesai", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "JamSelesai", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
      Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
      Me._adapter.InsertCommand.Connection = Me.Connection
      Me._adapter.InsertCommand.CommandText = "INSERT INTO [ReservasiD] ([IDReservasiH], [IDReservasiD], [IDDaftarMeja], [JamMul" & _
          "ai], [JamSelesai]) VALUES (@IDReservasiH, @IDReservasiD, @IDDaftarMeja, @JamMula" & _
          "i, @JamSelesai)"
      Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
      Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IDReservasiH", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IDReservasiH", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
      Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IDReservasiD", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IDReservasiD", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
      Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IDDaftarMeja", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IDDaftarMeja", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
      Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@JamMulai", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "JamMulai", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
      Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@JamSelesai", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "JamSelesai", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
      Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
      Me._adapter.UpdateCommand.Connection = Me.Connection
      Me._adapter.UpdateCommand.CommandText = "UPDATE [ReservasiD] SET [IDReservasiH] = @IDReservasiH, [IDReservasiD] = @IDReser" & _
          "vasiD, [IDDaftarMeja] = @IDDaftarMeja, [JamMulai] = @JamMulai, [JamSelesai] = @J" & _
          "amSelesai WHERE (([IDReservasiH] = @Original_IDReservasiH) AND ([IDReservasiD] =" & _
          " @Original_IDReservasiD) AND ((@IsNull_IDDaftarMeja = 1 AND [IDDaftarMeja] IS NU" & _
          "LL) OR ([IDDaftarMeja] = @Original_IDDaftarMeja)) AND ((@IsNull_JamMulai = 1 AND" & _
          " [JamMulai] IS NULL) OR ([JamMulai] = @Original_JamMulai)) AND ((@IsNull_JamSele" & _
          "sai = 1 AND [JamSelesai] IS NULL) OR ([JamSelesai] = @Original_JamSelesai)))"
      Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
      Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IDReservasiH", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IDReservasiH", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
      Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IDReservasiD", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IDReservasiD", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
      Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IDDaftarMeja", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IDDaftarMeja", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
      Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@JamMulai", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "JamMulai", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
      Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@JamSelesai", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "JamSelesai", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
      Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IDReservasiH", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IDReservasiH", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
      Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IDReservasiD", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IDReservasiD", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
      Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IDDaftarMeja", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IDDaftarMeja", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
      Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IDDaftarMeja", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IDDaftarMeja", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
      Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_JamMulai", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "JamMulai", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
      Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_JamMulai", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "JamMulai", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
      Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_JamSelesai", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "JamSelesai", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
      Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_JamSelesai", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "JamSelesai", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Sub InitConnection()
      Me._connection = New Global.System.Data.SqlClient.SqlConnection()
      Me._connection.ConnectionString = Global.Cafe_Management.Settings.Default.connString
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Sub InitCommandCollection()
      Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
      Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
      Me._commandCollection(0).Connection = Me.Connection
      Me._commandCollection(0).CommandText = "SELECT        ReservasiD.*" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "FROM            ReservasiD"
      Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
      Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
      Me._commandCollection(1).Connection = Me.Connection
      Me._commandCollection(1).CommandText = "SELECT a.IDReservasiH, a.IDReservasiD, a.IDDaftarMeja, b.Keterangan as NamaMeja, " & _
          "a.JamMulai, a.JamSelesai " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "FROM dbo.ReservasiD a" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "inner Join DaftarMeja b on a.I" & _
          "DDaftarMeja = b.IDDaftarMeja" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "where a.IDReservasiH = @IDReservasiH"
      Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
      Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IDReservasiH", Global.System.Data.SqlDbType.BigInt, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "IDReservasiH", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
     Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, True)> _
    Public Overridable Overloads Function Fill(ByVal dataTable As ReservasiDataset.ReservasiDDataTable) As Integer
      Me.Adapter.SelectCommand = Me.CommandCollection(0)
      If (Me.ClearBeforeFill = True) Then
        dataTable.Clear()
      End If
      Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
      Return returnValue
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
     Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], True)> _
    Public Overridable Overloads Function GetData() As ReservasiDataset.ReservasiDDataTable
      Me.Adapter.SelectCommand = Me.CommandCollection(0)
      Dim dataTable As ReservasiDataset.ReservasiDDataTable = New ReservasiDataset.ReservasiDDataTable()
      Me.Adapter.Fill(dataTable)
      Return dataTable
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
     Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, False)> _
    Public Overridable Overloads Function FillByIDReservasiH(ByVal dataTable As ReservasiDataset.ReservasiDDataTable, ByVal IDReservasiH As Long) As Integer
      Me.Adapter.SelectCommand = Me.CommandCollection(1)
      Me.Adapter.SelectCommand.Parameters(0).Value = CType(IDReservasiH, Long)
      If (Me.ClearBeforeFill = True) Then
        dataTable.Clear()
      End If
      Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
      Return returnValue
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
     Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], False)> _
    Public Overridable Overloads Function GetDataByIDReservasiH(ByVal IDReservasiH As Long) As ReservasiDataset.ReservasiDDataTable
      Me.Adapter.SelectCommand = Me.CommandCollection(1)
      Me.Adapter.SelectCommand.Parameters(0).Value = CType(IDReservasiH, Long)
      Dim dataTable As ReservasiDataset.ReservasiDDataTable = New ReservasiDataset.ReservasiDDataTable()
      Me.Adapter.Fill(dataTable)
      Return dataTable
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
    Public Overridable Overloads Function Update(ByVal dataTable As ReservasiDataset.ReservasiDDataTable) As Integer
      Return Me.Adapter.Update(dataTable)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
    Public Overridable Overloads Function Update(ByVal dataSet As ReservasiDataset) As Integer
      Return Me.Adapter.Update(dataSet, "ReservasiD")
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
    Public Overridable Overloads Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
      Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
    Public Overridable Overloads Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
      Return Me.Adapter.Update(dataRows)
    End Function
  End Class

  '''<summary>
  '''Represents the connection and commands used to retrieve and save data.
  '''</summary>
  <Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
   Global.System.ComponentModel.ToolboxItem(True), _
   Global.System.ComponentModel.DataObjectAttribute(True), _
   Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" & _
      ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), _
   Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
  Partial Public Class ReservasiHTableAdapter
    Inherits Global.System.ComponentModel.Component

    Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter

    Private _connection As Global.System.Data.SqlClient.SqlConnection

    Private _transaction As Global.System.Data.SqlClient.SqlTransaction

    Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand

    Private _clearBeforeFill As Boolean

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub New()
      MyBase.New()
      Me.ClearBeforeFill = True
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
      Get
        If (Me._adapter Is Nothing) Then
          Me.InitAdapter()
        End If
        Return Me._adapter
      End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
      Get
        If (Me._connection Is Nothing) Then
          Me.InitConnection()
        End If
        Return Me._connection
      End Get
      Set(value As Global.System.Data.SqlClient.SqlConnection)
        Me._connection = value
        If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
          Me.Adapter.InsertCommand.Connection = value
        End If
        If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
          Me.Adapter.DeleteCommand.Connection = value
        End If
        If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
          Me.Adapter.UpdateCommand.Connection = value
        End If
        Dim i As Integer = 0
        Do While (i < Me.CommandCollection.Length)
          If (Not (Me.CommandCollection(i)) Is Nothing) Then
            CType(Me.CommandCollection(i), Global.System.Data.SqlClient.SqlCommand).Connection = value
          End If
          i = (i + 1)
        Loop
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
      Get
        Return Me._transaction
      End Get
      Set(value As Global.System.Data.SqlClient.SqlTransaction)
        Me._transaction = value
        Dim i As Integer = 0
        Do While (i < Me.CommandCollection.Length)
          Me.CommandCollection(i).Transaction = Me._transaction
          i = (i + 1)
        Loop
        If ((Not (Me.Adapter) Is Nothing) _
                    AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
          Me.Adapter.DeleteCommand.Transaction = Me._transaction
        End If
        If ((Not (Me.Adapter) Is Nothing) _
                    AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
          Me.Adapter.InsertCommand.Transaction = Me._transaction
        End If
        If ((Not (Me.Adapter) Is Nothing) _
                    AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
          Me.Adapter.UpdateCommand.Transaction = Me._transaction
        End If
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
      Get
        If (Me._commandCollection Is Nothing) Then
          Me.InitCommandCollection()
        End If
        Return Me._commandCollection
      End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property ClearBeforeFill() As Boolean
      Get
        Return Me._clearBeforeFill
      End Get
      Set(value As Boolean)
        Me._clearBeforeFill = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Sub InitAdapter()
      Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
      Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
      tableMapping.SourceTable = "Table"
      tableMapping.DataSetTable = "ReservasiH"
      tableMapping.ColumnMappings.Add("IDReservasiH", "IDReservasiH")
      tableMapping.ColumnMappings.Add("IDAnggota", "IDAnggota")
      tableMapping.ColumnMappings.Add("Nama", "Nama")
      tableMapping.ColumnMappings.Add("TanggalReservasi", "TanggalReservasi")
      tableMapping.ColumnMappings.Add("UntukTanggal", "UntukTanggal")
      tableMapping.ColumnMappings.Add("StatusAktif", "StatusAktif")
      Me._adapter.TableMappings.Add(tableMapping)
      Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
      Me._adapter.DeleteCommand.Connection = Me.Connection
      Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[ReservasiH] WHERE (([IDReservasiH] = @Original_IDReservasiH) A" & _
          "ND ((@IsNull_IDAnggota = 1 AND [IDAnggota] IS NULL) OR ([IDAnggota] = @Original_" & _
          "IDAnggota)) AND ((@IsNull_Nama = 1 AND [Nama] IS NULL) OR ([Nama] = @Original_Na" & _
          "ma)) AND ((@IsNull_TanggalReservasi = 1 AND [TanggalReservasi] IS NULL) OR ([Tan" & _
          "ggalReservasi] = @Original_TanggalReservasi)) AND ((@IsNull_UntukTanggal = 1 AND" & _
          " [UntukTanggal] IS NULL) OR ([UntukTanggal] = @Original_UntukTanggal)) AND ((@Is" & _
          "Null_StatusAktif = 1 AND [StatusAktif] IS NULL) OR ([StatusAktif] = @Original_St" & _
          "atusAktif)))"
      Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
      Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IDReservasiH", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IDReservasiH", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
      Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IDAnggota", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IDAnggota", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
      Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IDAnggota", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IDAnggota", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
      Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Nama", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Nama", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
      Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Nama", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Nama", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
      Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TanggalReservasi", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TanggalReservasi", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
      Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TanggalReservasi", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TanggalReservasi", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
      Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_UntukTanggal", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UntukTanggal", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
      Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UntukTanggal", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UntukTanggal", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
      Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_StatusAktif", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "StatusAktif", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
      Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_StatusAktif", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "StatusAktif", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
      Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
      Me._adapter.InsertCommand.Connection = Me.Connection
      Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[ReservasiH] ([IDReservasiH], [IDAnggota], [Nama], [TanggalRese" & _
          "rvasi], [UntukTanggal], [StatusAktif]) VALUES (@IDReservasiH, @IDAnggota, @Nama," & _
          " @TanggalReservasi, @UntukTanggal, @StatusAktif);" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "SELECT IDReservasiH, IDAnggot" & _
          "a, Nama, TanggalReservasi, UntukTanggal, StatusAktif FROM ReservasiH WHERE (IDRe" & _
          "servasiH = @IDReservasiH)"
      Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
      Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IDReservasiH", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IDReservasiH", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
      Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IDAnggota", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IDAnggota", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
      Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Nama", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Nama", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
      Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TanggalReservasi", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TanggalReservasi", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
      Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UntukTanggal", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UntukTanggal", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
      Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@StatusAktif", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "StatusAktif", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
      Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
      Me._adapter.UpdateCommand.Connection = Me.Connection
      Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[ReservasiH] SET [IDReservasiH] = @IDReservasiH, [IDAnggota] = @IDAn" & _
          "ggota, [Nama] = @Nama, [TanggalReservasi] = @TanggalReservasi, [UntukTanggal] = " & _
          "@UntukTanggal, [StatusAktif] = @StatusAktif WHERE (([IDReservasiH] = @Original_I" & _
          "DReservasiH) AND ((@IsNull_IDAnggota = 1 AND [IDAnggota] IS NULL) OR ([IDAnggota" & _
          "] = @Original_IDAnggota)) AND ((@IsNull_Nama = 1 AND [Nama] IS NULL) OR ([Nama] " & _
          "= @Original_Nama)) AND ((@IsNull_TanggalReservasi = 1 AND [TanggalReservasi] IS " & _
          "NULL) OR ([TanggalReservasi] = @Original_TanggalReservasi)) AND ((@IsNull_UntukT" & _
          "anggal = 1 AND [UntukTanggal] IS NULL) OR ([UntukTanggal] = @Original_UntukTangg" & _
          "al)) AND ((@IsNull_StatusAktif = 1 AND [StatusAktif] IS NULL) OR ([StatusAktif] " & _
          "= @Original_StatusAktif)));" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "SELECT IDReservasiH, IDAnggota, Nama, TanggalReserv" & _
          "asi, UntukTanggal, StatusAktif FROM ReservasiH WHERE (IDReservasiH = @IDReservas" & _
          "iH)"
      Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
      Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IDReservasiH", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IDReservasiH", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
      Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IDAnggota", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IDAnggota", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
      Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Nama", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Nama", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
      Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TanggalReservasi", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TanggalReservasi", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
      Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UntukTanggal", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UntukTanggal", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
      Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@StatusAktif", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "StatusAktif", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
      Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IDReservasiH", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IDReservasiH", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
      Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IDAnggota", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IDAnggota", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
      Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IDAnggota", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IDAnggota", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
      Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Nama", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Nama", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
      Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Nama", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Nama", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
      Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TanggalReservasi", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TanggalReservasi", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
      Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TanggalReservasi", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TanggalReservasi", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
      Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_UntukTanggal", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UntukTanggal", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
      Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UntukTanggal", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UntukTanggal", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
      Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_StatusAktif", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "StatusAktif", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
      Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_StatusAktif", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "StatusAktif", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Sub InitConnection()
      Me._connection = New Global.System.Data.SqlClient.SqlConnection()
      Me._connection.ConnectionString = Global.Cafe_Management.Settings.Default.connString
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Sub InitCommandCollection()
      Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
      Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
      Me._commandCollection(0).Connection = Me.Connection
      Me._commandCollection(0).CommandText = "SELECT IDReservasiH, IDAnggota, Nama, TanggalReservasi, UntukTanggal, StatusAktif" & _
          " FROM dbo.ReservasiH"
      Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
     Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, True)> _
    Public Overridable Overloads Function Fill(ByVal dataTable As ReservasiDataset.ReservasiHDataTable) As Integer
      Me.Adapter.SelectCommand = Me.CommandCollection(0)
      If (Me.ClearBeforeFill = True) Then
        dataTable.Clear()
      End If
      Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
      Return returnValue
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
     Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], True)> _
    Public Overridable Overloads Function GetData() As ReservasiDataset.ReservasiHDataTable
      Me.Adapter.SelectCommand = Me.CommandCollection(0)
      Dim dataTable As ReservasiDataset.ReservasiHDataTable = New ReservasiDataset.ReservasiHDataTable()
      Me.Adapter.Fill(dataTable)
      Return dataTable
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
    Public Overridable Overloads Function Update(ByVal dataTable As ReservasiDataset.ReservasiHDataTable) As Integer
      Return Me.Adapter.Update(dataTable)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
    Public Overridable Overloads Function Update(ByVal dataSet As ReservasiDataset) As Integer
      Return Me.Adapter.Update(dataSet, "ReservasiH")
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
    Public Overridable Overloads Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
      Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
    Public Overridable Overloads Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
      Return Me.Adapter.Update(dataRows)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
     Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, True)> _
    Public Overridable Overloads Function Delete(ByVal Original_IDReservasiH As Long, ByVal Original_IDAnggota As Global.System.Nullable(Of Long), ByVal Original_Nama As String, ByVal Original_TanggalReservasi As Global.System.Nullable(Of Date), ByVal Original_UntukTanggal As Global.System.Nullable(Of Date), ByVal Original_StatusAktif As Global.System.Nullable(Of Boolean)) As Integer
      Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_IDReservasiH, Long)
      If (Original_IDAnggota.HasValue = True) Then
        Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0, Object)
        Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_IDAnggota.Value, Long)
      Else
        Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1, Object)
        Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
      End If
      If (Original_Nama Is Nothing) Then
        Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1, Object)
        Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
      Else
        Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0, Object)
        Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_Nama, String)
      End If
      If (Original_TanggalReservasi.HasValue = True) Then
        Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0, Object)
        Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_TanggalReservasi.Value, Date)
      Else
        Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1, Object)
        Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
      End If
      If (Original_UntukTanggal.HasValue = True) Then
        Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0, Object)
        Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_UntukTanggal.Value, Date)
      Else
        Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1, Object)
        Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
      End If
      If (Original_StatusAktif.HasValue = True) Then
        Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0, Object)
        Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_StatusAktif.Value, Boolean)
      Else
        Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1, Object)
        Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
      End If
      Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
      If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open) _
                  <> Global.System.Data.ConnectionState.Open) Then
        Me.Adapter.DeleteCommand.Connection.Open()
      End If
      Try
        Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
        Return returnValue
      Finally
        If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
          Me.Adapter.DeleteCommand.Connection.Close()
        End If
      End Try
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
     Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, True)> _
    Public Overridable Overloads Function Insert(ByVal IDReservasiH As Long, ByVal IDAnggota As Global.System.Nullable(Of Long), ByVal Nama As String, ByVal TanggalReservasi As Global.System.Nullable(Of Date), ByVal UntukTanggal As Global.System.Nullable(Of Date), ByVal StatusAktif As Global.System.Nullable(Of Boolean)) As Integer
      Me.Adapter.InsertCommand.Parameters(0).Value = CType(IDReservasiH, Long)
      If (IDAnggota.HasValue = True) Then
        Me.Adapter.InsertCommand.Parameters(1).Value = CType(IDAnggota.Value, Long)
      Else
        Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
      End If
      If (Nama Is Nothing) Then
        Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
      Else
        Me.Adapter.InsertCommand.Parameters(2).Value = CType(Nama, String)
      End If
      If (TanggalReservasi.HasValue = True) Then
        Me.Adapter.InsertCommand.Parameters(3).Value = CType(TanggalReservasi.Value, Date)
      Else
        Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
      End If
      If (UntukTanggal.HasValue = True) Then
        Me.Adapter.InsertCommand.Parameters(4).Value = CType(UntukTanggal.Value, Date)
      Else
        Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
      End If
      If (StatusAktif.HasValue = True) Then
        Me.Adapter.InsertCommand.Parameters(5).Value = CType(StatusAktif.Value, Boolean)
      Else
        Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
      End If
      Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
      If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open) _
                  <> Global.System.Data.ConnectionState.Open) Then
        Me.Adapter.InsertCommand.Connection.Open()
      End If
      Try
        Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
        Return returnValue
      Finally
        If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
          Me.Adapter.InsertCommand.Connection.Close()
        End If
      End Try
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
     Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, True)> _
    Public Overridable Overloads Function Update(ByVal IDReservasiH As Long, ByVal IDAnggota As Global.System.Nullable(Of Long), ByVal Nama As String, ByVal TanggalReservasi As Global.System.Nullable(Of Date), ByVal UntukTanggal As Global.System.Nullable(Of Date), ByVal StatusAktif As Global.System.Nullable(Of Boolean), ByVal Original_IDReservasiH As Long, ByVal Original_IDAnggota As Global.System.Nullable(Of Long), ByVal Original_Nama As String, ByVal Original_TanggalReservasi As Global.System.Nullable(Of Date), ByVal Original_UntukTanggal As Global.System.Nullable(Of Date), ByVal Original_StatusAktif As Global.System.Nullable(Of Boolean)) As Integer
      Me.Adapter.UpdateCommand.Parameters(0).Value = CType(IDReservasiH, Long)
      If (IDAnggota.HasValue = True) Then
        Me.Adapter.UpdateCommand.Parameters(1).Value = CType(IDAnggota.Value, Long)
      Else
        Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
      End If
      If (Nama Is Nothing) Then
        Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
      Else
        Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Nama, String)
      End If
      If (TanggalReservasi.HasValue = True) Then
        Me.Adapter.UpdateCommand.Parameters(3).Value = CType(TanggalReservasi.Value, Date)
      Else
        Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
      End If
      If (UntukTanggal.HasValue = True) Then
        Me.Adapter.UpdateCommand.Parameters(4).Value = CType(UntukTanggal.Value, Date)
      Else
        Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
      End If
      If (StatusAktif.HasValue = True) Then
        Me.Adapter.UpdateCommand.Parameters(5).Value = CType(StatusAktif.Value, Boolean)
      Else
        Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
      End If
      Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_IDReservasiH, Long)
      If (Original_IDAnggota.HasValue = True) Then
        Me.Adapter.UpdateCommand.Parameters(7).Value = CType(0, Object)
        Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_IDAnggota.Value, Long)
      Else
        Me.Adapter.UpdateCommand.Parameters(7).Value = CType(1, Object)
        Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
      End If
      If (Original_Nama Is Nothing) Then
        Me.Adapter.UpdateCommand.Parameters(9).Value = CType(1, Object)
        Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
      Else
        Me.Adapter.UpdateCommand.Parameters(9).Value = CType(0, Object)
        Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Original_Nama, String)
      End If
      If (Original_TanggalReservasi.HasValue = True) Then
        Me.Adapter.UpdateCommand.Parameters(11).Value = CType(0, Object)
        Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Original_TanggalReservasi.Value, Date)
      Else
        Me.Adapter.UpdateCommand.Parameters(11).Value = CType(1, Object)
        Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
      End If
      If (Original_UntukTanggal.HasValue = True) Then
        Me.Adapter.UpdateCommand.Parameters(13).Value = CType(0, Object)
        Me.Adapter.UpdateCommand.Parameters(14).Value = CType(Original_UntukTanggal.Value, Date)
      Else
        Me.Adapter.UpdateCommand.Parameters(13).Value = CType(1, Object)
        Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
      End If
      If (Original_StatusAktif.HasValue = True) Then
        Me.Adapter.UpdateCommand.Parameters(15).Value = CType(0, Object)
        Me.Adapter.UpdateCommand.Parameters(16).Value = CType(Original_StatusAktif.Value, Boolean)
      Else
        Me.Adapter.UpdateCommand.Parameters(15).Value = CType(1, Object)
        Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
      End If
      Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
      If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open) _
                  <> Global.System.Data.ConnectionState.Open) Then
        Me.Adapter.UpdateCommand.Connection.Open()
      End If
      Try
        Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
        Return returnValue
      Finally
        If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
          Me.Adapter.UpdateCommand.Connection.Close()
        End If
      End Try
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
     Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, True)> _
    Public Overridable Overloads Function Update(ByVal IDAnggota As Global.System.Nullable(Of Long), ByVal Nama As String, ByVal TanggalReservasi As Global.System.Nullable(Of Date), ByVal UntukTanggal As Global.System.Nullable(Of Date), ByVal StatusAktif As Global.System.Nullable(Of Boolean), ByVal Original_IDReservasiH As Long, ByVal Original_IDAnggota As Global.System.Nullable(Of Long), ByVal Original_Nama As String, ByVal Original_TanggalReservasi As Global.System.Nullable(Of Date), ByVal Original_UntukTanggal As Global.System.Nullable(Of Date), ByVal Original_StatusAktif As Global.System.Nullable(Of Boolean)) As Integer
      Return Me.Update(Original_IDReservasiH, IDAnggota, Nama, TanggalReservasi, UntukTanggal, StatusAktif, Original_IDReservasiH, Original_IDAnggota, Original_Nama, Original_TanggalReservasi, Original_UntukTanggal, Original_StatusAktif)
    End Function
  End Class

  '''<summary>
  '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
  '''</summary>
  <Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
   Global.System.ComponentModel.ToolboxItem(True), _
   Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" & _
      "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), _
   Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")> _
  Partial Public Class TableAdapterManager
    Inherits Global.System.ComponentModel.Component

    Private _updateOrder As UpdateOrderOption

    Private _reservasiDTableAdapter As ReservasiDTableAdapter

    Private _reservasiHTableAdapter As ReservasiHTableAdapter

    Private _backupDataSetBeforeUpdate As Boolean

    Private _connection As Global.System.Data.IDbConnection

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property UpdateOrder() As UpdateOrderOption
      Get
        Return Me._updateOrder
      End Get
      Set(value As UpdateOrderOption)
        Me._updateOrder = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" & _
        "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" & _
        "a", "System.Drawing.Design.UITypeEditor")> _
    Public Property ReservasiDTableAdapter() As ReservasiDTableAdapter
      Get
        Return Me._reservasiDTableAdapter
      End Get
      Set(value As ReservasiDTableAdapter)
        Me._reservasiDTableAdapter = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" & _
        "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" & _
        "a", "System.Drawing.Design.UITypeEditor")> _
    Public Property ReservasiHTableAdapter() As ReservasiHTableAdapter
      Get
        Return Me._reservasiHTableAdapter
      End Get
      Set(value As ReservasiHTableAdapter)
        Me._reservasiHTableAdapter = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Property BackupDataSetBeforeUpdate() As Boolean
      Get
        Return Me._backupDataSetBeforeUpdate
      End Get
      Set(value As Boolean)
        Me._backupDataSetBeforeUpdate = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False)> _
    Public Property Connection() As Global.System.Data.IDbConnection
      Get
        If (Not (Me._connection) Is Nothing) Then
          Return Me._connection
        End If
        If ((Not (Me._reservasiDTableAdapter) Is Nothing) _
                    AndAlso (Not (Me._reservasiDTableAdapter.Connection) Is Nothing)) Then
          Return Me._reservasiDTableAdapter.Connection
        End If
        If ((Not (Me._reservasiHTableAdapter) Is Nothing) _
                    AndAlso (Not (Me._reservasiHTableAdapter.Connection) Is Nothing)) Then
          Return Me._reservasiHTableAdapter.Connection
        End If
        Return Nothing
      End Get
      Set(value As Global.System.Data.IDbConnection)
        Me._connection = value
      End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False)> _
    Public ReadOnly Property TableAdapterInstanceCount() As Integer
      Get
        Dim count As Integer = 0
        If (Not (Me._reservasiDTableAdapter) Is Nothing) Then
          count = (count + 1)
        End If
        If (Not (Me._reservasiHTableAdapter) Is Nothing) Then
          count = (count + 1)
        End If
        Return count
      End Get
    End Property

    '''<summary>
    '''Update rows in top-down order.
    '''</summary>
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Function UpdateUpdatedRows(ByVal dataSet As ReservasiDataset, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
      Dim result As Integer = 0
      If (Not (Me._reservasiDTableAdapter) Is Nothing) Then
        Dim updatedRows() As Global.System.Data.DataRow = dataSet.ReservasiD.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
        updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
        If ((Not (updatedRows) Is Nothing) _
                    AndAlso (0 < updatedRows.Length)) Then
          result = (result + Me._reservasiDTableAdapter.Update(updatedRows))
          allChangedRows.AddRange(updatedRows)
        End If
      End If
      If (Not (Me._reservasiHTableAdapter) Is Nothing) Then
        Dim updatedRows() As Global.System.Data.DataRow = dataSet.ReservasiH.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
        updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
        If ((Not (updatedRows) Is Nothing) _
                    AndAlso (0 < updatedRows.Length)) Then
          result = (result + Me._reservasiHTableAdapter.Update(updatedRows))
          allChangedRows.AddRange(updatedRows)
        End If
      End If
      Return result
    End Function

    '''<summary>
    '''Insert rows in top-down order.
    '''</summary>
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Function UpdateInsertedRows(ByVal dataSet As ReservasiDataset, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
      Dim result As Integer = 0
      If (Not (Me._reservasiDTableAdapter) Is Nothing) Then
        Dim addedRows() As Global.System.Data.DataRow = dataSet.ReservasiD.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
        If ((Not (addedRows) Is Nothing) _
                    AndAlso (0 < addedRows.Length)) Then
          result = (result + Me._reservasiDTableAdapter.Update(addedRows))
          allAddedRows.AddRange(addedRows)
        End If
      End If
      If (Not (Me._reservasiHTableAdapter) Is Nothing) Then
        Dim addedRows() As Global.System.Data.DataRow = dataSet.ReservasiH.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
        If ((Not (addedRows) Is Nothing) _
                    AndAlso (0 < addedRows.Length)) Then
          result = (result + Me._reservasiHTableAdapter.Update(addedRows))
          allAddedRows.AddRange(addedRows)
        End If
      End If
      Return result
    End Function

    '''<summary>
    '''Delete rows in bottom-up order.
    '''</summary>
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Function UpdateDeletedRows(ByVal dataSet As ReservasiDataset, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
      Dim result As Integer = 0
      If (Not (Me._reservasiHTableAdapter) Is Nothing) Then
        Dim deletedRows() As Global.System.Data.DataRow = dataSet.ReservasiH.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
        If ((Not (deletedRows) Is Nothing) _
                    AndAlso (0 < deletedRows.Length)) Then
          result = (result + Me._reservasiHTableAdapter.Update(deletedRows))
          allChangedRows.AddRange(deletedRows)
        End If
      End If
      If (Not (Me._reservasiDTableAdapter) Is Nothing) Then
        Dim deletedRows() As Global.System.Data.DataRow = dataSet.ReservasiD.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
        If ((Not (deletedRows) Is Nothing) _
                    AndAlso (0 < deletedRows.Length)) Then
          result = (result + Me._reservasiDTableAdapter.Update(deletedRows))
          allChangedRows.AddRange(deletedRows)
        End If
      End If
      Return result
    End Function

    '''<summary>
    '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
    '''</summary>
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
      If ((updatedRows Is Nothing) _
                  OrElse (updatedRows.Length < 1)) Then
        Return updatedRows
      End If
      If ((allAddedRows Is Nothing) _
                  OrElse (allAddedRows.Count < 1)) Then
        Return updatedRows
      End If
      Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
      Dim i As Integer = 0
      Do While (i < updatedRows.Length)
        Dim row As Global.System.Data.DataRow = updatedRows(i)
        If (allAddedRows.Contains(row) = False) Then
          realUpdatedRows.Add(row)
        End If
        i = (i + 1)
      Loop
      Return realUpdatedRows.ToArray
    End Function

    '''<summary>
    '''Update all changes to the dataset.
    '''</summary>
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Overridable Function UpdateAll(ByVal dataSet As ReservasiDataset) As Integer
      If (dataSet Is Nothing) Then
        Throw New Global.System.ArgumentNullException("dataSet")
      End If
      If (dataSet.HasChanges = False) Then
        Return 0
      End If
      If ((Not (Me._reservasiDTableAdapter) Is Nothing) _
                  AndAlso (Me.MatchTableAdapterConnection(Me._reservasiDTableAdapter.Connection) = False)) Then
        Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" & _
                "tring.")
      End If
      If ((Not (Me._reservasiHTableAdapter) Is Nothing) _
                  AndAlso (Me.MatchTableAdapterConnection(Me._reservasiHTableAdapter.Connection) = False)) Then
        Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" & _
                "tring.")
      End If
      Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
      If (workConnection Is Nothing) Then
        Throw New Global.System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" & _
                "ger TableAdapter property to a valid TableAdapter instance.")
      End If
      Dim workConnOpened As Boolean = False
      If ((workConnection.State And Global.System.Data.ConnectionState.Broken) _
                  = Global.System.Data.ConnectionState.Broken) Then
        workConnection.Close()
      End If
      If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
        workConnection.Open()
        workConnOpened = True
      End If
      Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
      If (workTransaction Is Nothing) Then
        Throw New Global.System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" & _
                "ctions or the current state is not allowing the transaction to begin.")
      End If
      Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
      Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
      Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
      Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
      Dim result As Integer = 0
      Dim backupDataSet As Global.System.Data.DataSet = Nothing
      If Me.BackupDataSetBeforeUpdate Then
        backupDataSet = New Global.System.Data.DataSet()
        backupDataSet.Merge(dataSet)
      End If
      Try
        '---- Prepare for update -----------
        '
        If (Not (Me._reservasiDTableAdapter) Is Nothing) Then
          revertConnections.Add(Me._reservasiDTableAdapter, Me._reservasiDTableAdapter.Connection)
          Me._reservasiDTableAdapter.Connection = CType(workConnection, Global.System.Data.SqlClient.SqlConnection)
          Me._reservasiDTableAdapter.Transaction = CType(workTransaction, Global.System.Data.SqlClient.SqlTransaction)
          If Me._reservasiDTableAdapter.Adapter.AcceptChangesDuringUpdate Then
            Me._reservasiDTableAdapter.Adapter.AcceptChangesDuringUpdate = False
            adaptersWithAcceptChangesDuringUpdate.Add(Me._reservasiDTableAdapter.Adapter)
          End If
        End If
        If (Not (Me._reservasiHTableAdapter) Is Nothing) Then
          revertConnections.Add(Me._reservasiHTableAdapter, Me._reservasiHTableAdapter.Connection)
          Me._reservasiHTableAdapter.Connection = CType(workConnection, Global.System.Data.SqlClient.SqlConnection)
          Me._reservasiHTableAdapter.Transaction = CType(workTransaction, Global.System.Data.SqlClient.SqlTransaction)
          If Me._reservasiHTableAdapter.Adapter.AcceptChangesDuringUpdate Then
            Me._reservasiHTableAdapter.Adapter.AcceptChangesDuringUpdate = False
            adaptersWithAcceptChangesDuringUpdate.Add(Me._reservasiHTableAdapter.Adapter)
          End If
        End If
        '
        '---- Perform updates -----------
        '
        If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
          result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
          result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
        Else
          result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
          result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
        End If
        result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
        '
        '---- Commit updates -----------
        '
        workTransaction.Commit()
        If (0 < allAddedRows.Count) Then
          Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
          allAddedRows.CopyTo(rows)
          Dim i As Integer = 0
          Do While (i < rows.Length)
            Dim row As Global.System.Data.DataRow = rows(i)
            row.AcceptChanges()
            i = (i + 1)
          Loop
        End If
        If (0 < allChangedRows.Count) Then
          Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
          allChangedRows.CopyTo(rows)
          Dim i As Integer = 0
          Do While (i < rows.Length)
            Dim row As Global.System.Data.DataRow = rows(i)
            row.AcceptChanges()
            i = (i + 1)
          Loop
        End If
      Catch ex As Global.System.Exception
        workTransaction.Rollback()
        '---- Restore the dataset -----------
        If Me.BackupDataSetBeforeUpdate Then
          Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
          dataSet.Clear()
          dataSet.Merge(backupDataSet)
        Else
          If (0 < allAddedRows.Count) Then
            Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
            allAddedRows.CopyTo(rows)
            Dim i As Integer = 0
            Do While (i < rows.Length)
              Dim row As Global.System.Data.DataRow = rows(i)
              row.AcceptChanges()
              row.SetAdded()
              i = (i + 1)
            Loop
          End If
        End If
        Throw ex
      Finally
        If workConnOpened Then
          workConnection.Close()
        End If
        If (Not (Me._reservasiDTableAdapter) Is Nothing) Then
          Me._reservasiDTableAdapter.Connection = CType(revertConnections(Me._reservasiDTableAdapter), Global.System.Data.SqlClient.SqlConnection)
          Me._reservasiDTableAdapter.Transaction = Nothing
        End If
        If (Not (Me._reservasiHTableAdapter) Is Nothing) Then
          Me._reservasiHTableAdapter.Connection = CType(revertConnections(Me._reservasiHTableAdapter), Global.System.Data.SqlClient.SqlConnection)
          Me._reservasiHTableAdapter.Transaction = Nothing
        End If
        If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
          Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
          adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
          Dim i As Integer = 0
          Do While (i < adapters.Length)
            Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
            adapter.AcceptChangesDuringUpdate = True
            i = (i + 1)
          Loop
        End If
      End Try
      Return result
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
      Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
      If (Not (Me._connection) Is Nothing) Then
        Return True
      End If
      If ((Me.Connection Is Nothing) _
                  OrElse (inputConnection Is Nothing)) Then
        Return True
      End If
      If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
        Return True
      End If
      Return False
    End Function

    '''<summary>
    '''Update Order Option
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Enum UpdateOrderOption

      InsertUpdateDelete = 0

      UpdateInsertDelete = 1
    End Enum

    '''<summary>
    '''Used to sort self-referenced table's rows
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Class SelfReferenceComparer
      Inherits Object
      Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)

      Private _relation As Global.System.Data.DataRelation

      Private _childFirst As Integer

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
        MyBase.New()
        Me._relation = relation
        If childFirst Then
          Me._childFirst = -1
        Else
          Me._childFirst = 1
        End If
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
        Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
        Dim root As Global.System.Data.DataRow = row
        distance = 0

        Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
        traversedRows(row) = row

        Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

        Do While ((Not (parent) Is Nothing) _
                    AndAlso (traversedRows.ContainsKey(parent) = False))
          distance = (distance + 1)
          root = parent
          traversedRows(parent) = parent
          parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

        Loop

        If (distance = 0) Then
          traversedRows.Clear()
          traversedRows(row) = row
          parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

          Do While ((Not (parent) Is Nothing) _
                      AndAlso (traversedRows.ContainsKey(parent) = False))
            distance = (distance + 1)
            root = parent
            traversedRows(parent) = parent
            parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

          Loop
        End If

        Return root
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
        If Object.ReferenceEquals(row1, row2) Then
          Return 0
        End If
        If (row1 Is Nothing) Then
          Return -1
        End If
        If (row2 Is Nothing) Then
          Return 1
        End If

        Dim distance1 As Integer = 0
        Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

        Dim distance2 As Integer = 0
        Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

        If Object.ReferenceEquals(root1, root2) Then
          Return (Me._childFirst * distance1.CompareTo(distance2))
        Else
          Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing) _
                          AndAlso (Not (root2.Table) Is Nothing)))
          If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
            Return -1
          Else
            Return 1
          End If
        End If
      End Function
    End Class
  End Class
End Namespace
